<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0612.2121                               -->
<workbook original-version='18.1' source-build='2019.1.5 (20191.19.0612.2121)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='avocado' inline='true' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='avocado' name='textscan.14gpdvo1syxksc16t1uzg00q9ct4'>
            <connection class='textscan' directory='C:/Tableau 10 data/avocado' filename='avocado.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.14gpdvo1syxksc16t1uzg00q9ct4' name='avocado.csv' table='[avocado#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='real' name='AveragePrice' ordinal='2' />
            <column datatype='real' name='Total Volume' ordinal='3' />
            <column datatype='real' name='4046' ordinal='4' />
            <column datatype='real' name='4225' ordinal='5' />
            <column datatype='real' name='4770' ordinal='6' />
            <column datatype='real' name='Total Bags' ordinal='7' />
            <column datatype='real' name='Small Bags' ordinal='8' />
            <column datatype='real' name='Large Bags' ordinal='9' />
            <column datatype='real' name='XLarge Bags' ordinal='10' />
            <column datatype='string' name='type' ordinal='11' />
            <column datatype='integer' name='year' ordinal='12' />
            <column datatype='string' name='region' ordinal='13' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AveragePrice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AveragePrice]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>AveragePrice</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Volume]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>Total Volume</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4046</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4046]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>4046</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4225</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4225]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>4225</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4770</remote-name>
            <remote-type>5</remote-type>
            <local-name>[4770]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>4770</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Bags]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>Total Bags</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Small Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Small Bags]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>Small Bags</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Large Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Large Bags]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>Large Bags</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>XLarge Bags</remote-name>
            <remote-type>5</remote-type>
            <local-name>[XLarge Bags]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>XLarge Bags</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[region]</local-name>
            <parent-name>[avocado.csv]</parent-name>
            <remote-alias>region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[4046]' role='measure' type='quantitative' />
      <column datatype='real' name='[4225]' role='measure' type='quantitative' />
      <column datatype='real' name='[4770]' role='measure' type='quantitative' />
      <column caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
      <column datatype='real' name='[Large Bags]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[region]' new-bin='true'>
          <bin default-name='false' value='&quot;Arizona&quot;'>
            <value>&quot;PhoenixTucson&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Colorado&quot;'>
            <value>&quot;Denver&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Florida&quot;'>
            <value>&quot;Jacksonville&quot;</value>
            <value>&quot;MiamiFtLauderdale&quot;</value>
            <value>&quot;Orlando&quot;</value>
            <value>&quot;Tampa&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Georgia&quot;'>
            <value>&quot;Atlanta&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Idaho&quot;'>
            <value>&quot;Boise&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Illinois&quot;'>
            <value>&quot;Chicago&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Indiana&quot;'>
            <value>&quot;Indianapolis&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Kentucky&quot;'>
            <value>&quot;Louisville&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Los Angeles&quot;'>
            <value>&quot;LosAngeles&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Louisiana&quot;'>
            <value>&quot;NewOrleansMobile&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Massachusetts&quot;'>
            <value>&quot;Boston&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Michigan&quot;'>
            <value>&quot;Detroit&quot;</value>
            <value>&quot;GrandRapids&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Missouri&quot;'>
            <value>&quot;StLouis&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Nevada&quot;'>
            <value>&quot;LasVegas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New York&quot;'>
            <value>&quot;Albany&quot;</value>
            <value>&quot;BuffaloRochester&quot;</value>
            <value>&quot;NewYork&quot;</value>
            <value>&quot;Syracuse&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North Carolina&quot;'>
            <value>&quot;Charlotte&quot;</value>
            <value>&quot;RaleighGreensboro&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Ohio&quot;'>
            <value>&quot;CincinnatiDayton&quot;</value>
            <value>&quot;Columbus&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Oregon&quot;'>
            <value>&quot;Portland&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pennsylvania&quot;'>
            <value>&quot;HarrisburgScranton&quot;</value>
            <value>&quot;Philadelphia&quot;</value>
            <value>&quot;Pittsburgh&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South Carolina&quot;'>
            <value>&quot;SouthCarolina&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Tennessee&quot;'>
            <value>&quot;Nashville&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Texas&quot;'>
            <value>&quot;DallasFtWorth&quot;</value>
            <value>&quot;Houston&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Virginia&quot;'>
            <value>&quot;RichmondNorfolk&quot;</value>
            <value>&quot;Roanoke&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Washington&quot;'>
            <value>&quot;Seattle&quot;</value>
            <value>&quot;Spokane&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='real' name='[Small Bags]' role='measure' type='quantitative' />
      <column datatype='real' name='[XLarge Bags]' role='measure' type='quantitative' />
      <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
        <aliases>
          <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
          <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
          <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
          <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
        </aliases>
      </column>
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[4046]' derivation='Sum' name='[sum:4046:qk]' pivot='key' type='quantitative' />
      <column-instance column='[4225]' derivation='Sum' name='[sum:4225:qk]' pivot='key' type='quantitative' />
      <column-instance column='[4770]' derivation='Sum' name='[sum:4770:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Large Bags]' derivation='Sum' name='[sum:Large Bags:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Small Bags]' derivation='Sum' name='[sum:Small Bags:qk]' pivot='key' type='quantitative' />
      <column-instance column='[XLarge Bags]' derivation='Sum' name='[sum:XLarge Bags:qk]' pivot='key' type='quantitative' />
      <group caption='Action (States)' hidden='true' name='[Action (States)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region (group) 1]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.394207' measure-ordering='alphabetic' measure-percentage='0.605793' rowDisplayCount='1000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Large Bags:qk]&quot;</bucket>
            </map>
            <map to='#309143'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4770:qk]&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Small Bags:qk]&quot;</bucket>
            </map>
            <map to='#e03531'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4046:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:XLarge Bags:qk]&quot;</bucket>
            </map>
            <map to='#ffda66'>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4225:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
      <datasources>
        <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
      </datasources>
      <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
        <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[region]' new-bin='true'>
            <bin default-name='false' value='&quot;Arizona&quot;'>
              <value>&quot;PhoenixTucson&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Colorado&quot;'>
              <value>&quot;Denver&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Florida&quot;'>
              <value>&quot;Jacksonville&quot;</value>
              <value>&quot;MiamiFtLauderdale&quot;</value>
              <value>&quot;Orlando&quot;</value>
              <value>&quot;Tampa&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Georgia&quot;'>
              <value>&quot;Atlanta&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Idaho&quot;'>
              <value>&quot;Boise&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Illinois&quot;'>
              <value>&quot;Chicago&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Indiana&quot;'>
              <value>&quot;Indianapolis&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Kentucky&quot;'>
              <value>&quot;Louisville&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Los Angeles&quot;'>
              <value>&quot;LosAngeles&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Louisiana&quot;'>
              <value>&quot;NewOrleansMobile&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Massachusetts&quot;'>
              <value>&quot;Boston&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Michigan&quot;'>
              <value>&quot;Detroit&quot;</value>
              <value>&quot;GrandRapids&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Missouri&quot;'>
              <value>&quot;StLouis&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Nevada&quot;'>
              <value>&quot;LasVegas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;New York&quot;'>
              <value>&quot;Albany&quot;</value>
              <value>&quot;BuffaloRochester&quot;</value>
              <value>&quot;NewYork&quot;</value>
              <value>&quot;Syracuse&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;North Carolina&quot;'>
              <value>&quot;Charlotte&quot;</value>
              <value>&quot;RaleighGreensboro&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Ohio&quot;'>
              <value>&quot;CincinnatiDayton&quot;</value>
              <value>&quot;Columbus&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Oregon&quot;'>
              <value>&quot;Portland&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Pennsylvania&quot;'>
              <value>&quot;HarrisburgScranton&quot;</value>
              <value>&quot;Philadelphia&quot;</value>
              <value>&quot;Pittsburgh&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South Carolina&quot;'>
              <value>&quot;SouthCarolina&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Tennessee&quot;'>
              <value>&quot;Nashville&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Texas&quot;'>
              <value>&quot;DallasFtWorth&quot;</value>
              <value>&quot;Houston&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Virginia&quot;'>
              <value>&quot;RichmondNorfolk&quot;</value>
              <value>&quot;Roanoke&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;Washington&quot;'>
              <value>&quot;Seattle&quot;</value>
              <value>&quot;Spokane&quot;</value>
            </bin>
          </calculation>
        </column>
        <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
        <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
          <aliases>
            <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
            <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
            <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
            <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
          </aliases>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[Region (group) 1]' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[Region (group) 1]' member='&quot;BaltimoreWashington&quot;' />
            <groupfilter function='member' level='[Region (group) 1]' member='&quot;HartfordSpringfield&quot;' />
          </groupfilter>
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter from='&quot;Albany&quot;' function='range' level='[none:region:nk]' to='&quot;GrandRapids&quot;' />
          <groupfilter from='&quot;HarrisburgScranton&quot;' function='range' level='[none:region:nk]' to='&quot;LasVegas&quot;' />
          <groupfilter function='member' level='[none:region:nk]' member='&quot;Louisville&quot;' />
          <groupfilter function='member' level='[none:region:nk]' member='&quot;MiamiFtLauderdale&quot;' />
          <groupfilter from='&quot;Nashville&quot;' function='range' level='[none:region:nk]' to='&quot;NewYork&quot;' />
          <groupfilter from='&quot;Orlando&quot;' function='range' level='[none:region:nk]' to='&quot;Pittsburgh&quot;' />
          <groupfilter from='&quot;Portland&quot;' function='range' level='[none:region:nk]' to='&quot;Roanoke&quot;' />
          <groupfilter function='member' level='[none:region:nk]' member='&quot;Seattle&quot;' />
          <groupfilter function='member' level='[none:region:nk]' member='&quot;SouthCarolina&quot;' />
          <groupfilter from='&quot;Spokane&quot;' function='range' level='[none:region:nk]' to='&quot;Tampa&quot;' />
        </groupfilter>
        <target field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total number sold Dashboard' type='sheet' worksheet='Total number sold by state (Table)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total number sold Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Total number sold Dashboard' type='sheet' worksheet='Total number sold by state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Total number sold Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average price by state Dashboard' type='sheet' worksheet='Average price by state' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Average price by state Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Average price by state Dashboard' type='sheet' worksheet='Average price by state (Table)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Average price by state Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Average price by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[AveragePrice]' derivation='Avg' name='[avg:AveragePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]'>
            <groupfilter function='level-members' level='[Region (group) 1]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]' field-type='quantitative' max='-6695349.1292664157' min='-14674749.163884262' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]' field-type='quantitative' max='6818666.3294430189' min='2259008.9629716901' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]' />
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' />
              <geometry column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]</rows>
        <cols>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{464B8B06-1D53-43DF-99B5-7E97AE75960E}' />
    </worksheet>
    <worksheet name='Average price by state (Table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[AveragePrice]' derivation='Avg' name='[avg:AveragePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]'>
            <groupfilter function='level-members' level='[Region (group) 1]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' />
              <text column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</rows>
        <cols />
      </table>
      <simple-id uuid='{93FD024B-9B2E-4C1F-9217-F8A72B9BD9EA}' />
    </worksheet>
    <worksheet name='Bag size by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column datatype='real' name='[Large Bags]' role='measure' type='quantitative' />
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Small Bags]' role='measure' type='quantitative' />
            <column datatype='real' name='[XLarge Bags]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
            <column-instance column='[Large Bags]' derivation='Sum' name='[sum:Large Bags:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Small Bags]' derivation='Sum' name='[sum:Small Bags:qk]' pivot='key' type='quantitative' />
            <column-instance column='[XLarge Bags]' derivation='Sum' name='[sum:XLarge Bags:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Large Bags:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Small Bags:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:XLarge Bags:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Small Bags:qk]&quot;</bucket>
              <bucket>&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Large Bags:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Multiple Values]</rows>
        <cols>([federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1] / [federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{F0C5ED20-0903-46E4-B1DB-3F40919AAEDB}' />
    </worksheet>
    <worksheet name='Cost of 1 avocado (state by month)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column caption='Average Price' datatype='real' name='[AveragePrice]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[AveragePrice]' derivation='Avg' name='[avg:AveragePrice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
          </datasource-dependencies>
          <alphabetic-sort column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]' direction='ASC' />
          <natural-sort column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[mn:Date:ok]' direction='ASC' />
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' />
              <text column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</rows>
        <cols total='true'>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{356E9424-1F27-4383-89D3-24F597786A3E}' />
    </worksheet>
    <worksheet name='Total number sold by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Total Volume]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
            <column-instance column='[Total Volume]' derivation='Sum' name='[sum:Total Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]'>
            <groupfilter function='level-members' level='[Region (group) 1]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]' field-type='quantitative' max='-6075680.3847626876' min='-16191300.963891784' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]' field-type='quantitative' max='7787032.3951298967' min='1615258.4166188443' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]' />
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' />
              <geometry column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]</rows>
        <cols total='true'>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E6602E1D-9046-465C-8C5D-BC753E93CDAA}' />
    </worksheet>
    <worksheet name='Total number sold by state (Table)'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='real' name='[Total Volume]' role='measure' type='quantitative' />
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
            <column-instance column='[Total Volume]' derivation='Sum' name='[sum:Total Volume:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]'>
            <groupfilter function='level-members' level='[Region (group) 1]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Action (States)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' />
              <text column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</rows>
        <cols />
      </table>
      <simple-id uuid='{2E5B35E0-0DEC-4805-8A86-3144B84F5F7A}' />
    </worksheet>
    <worksheet name='Type of avocado sold'>
      <table>
        <view>
          <datasources>
            <datasource caption='avocado' name='federated.1gudw3s1rqj1ae15uams61dw1tzs' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1gudw3s1rqj1ae15uams61dw1tzs'>
            <column datatype='real' name='[4046]' role='measure' type='quantitative' />
            <column datatype='real' name='[4225]' role='measure' type='quantitative' />
            <column datatype='real' name='[4770]' role='measure' type='quantitative' />
            <column caption='States' datatype='string' name='[Region (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[region]' new-bin='true'>
                <bin default-name='false' value='&quot;Arizona&quot;'>
                  <value>&quot;PhoenixTucson&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Colorado&quot;'>
                  <value>&quot;Denver&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Florida&quot;'>
                  <value>&quot;Jacksonville&quot;</value>
                  <value>&quot;MiamiFtLauderdale&quot;</value>
                  <value>&quot;Orlando&quot;</value>
                  <value>&quot;Tampa&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Georgia&quot;'>
                  <value>&quot;Atlanta&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Idaho&quot;'>
                  <value>&quot;Boise&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Illinois&quot;'>
                  <value>&quot;Chicago&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Indiana&quot;'>
                  <value>&quot;Indianapolis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Kentucky&quot;'>
                  <value>&quot;Louisville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Los Angeles&quot;'>
                  <value>&quot;LosAngeles&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Louisiana&quot;'>
                  <value>&quot;NewOrleansMobile&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Massachusetts&quot;'>
                  <value>&quot;Boston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Michigan&quot;'>
                  <value>&quot;Detroit&quot;</value>
                  <value>&quot;GrandRapids&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Missouri&quot;'>
                  <value>&quot;StLouis&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Nevada&quot;'>
                  <value>&quot;LasVegas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New York&quot;'>
                  <value>&quot;Albany&quot;</value>
                  <value>&quot;BuffaloRochester&quot;</value>
                  <value>&quot;NewYork&quot;</value>
                  <value>&quot;Syracuse&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North Carolina&quot;'>
                  <value>&quot;Charlotte&quot;</value>
                  <value>&quot;RaleighGreensboro&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ohio&quot;'>
                  <value>&quot;CincinnatiDayton&quot;</value>
                  <value>&quot;Columbus&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Oregon&quot;'>
                  <value>&quot;Portland&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pennsylvania&quot;'>
                  <value>&quot;HarrisburgScranton&quot;</value>
                  <value>&quot;Philadelphia&quot;</value>
                  <value>&quot;Pittsburgh&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South Carolina&quot;'>
                  <value>&quot;SouthCarolina&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Tennessee&quot;'>
                  <value>&quot;Nashville&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Texas&quot;'>
                  <value>&quot;DallasFtWorth&quot;</value>
                  <value>&quot;Houston&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Virginia&quot;'>
                  <value>&quot;RichmondNorfolk&quot;</value>
                  <value>&quot;Roanoke&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Washington&quot;'>
                  <value>&quot;Seattle&quot;</value>
                  <value>&quot;Spokane&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[region]' derivation='None' name='[none:region:nk]' pivot='key' type='nominal' />
            <column caption='Region' datatype='string' name='[region]' role='dimension' semantic-role='' type='nominal'>
              <aliases>
                <alias key='&quot;LosAngeles&quot;' value='Los Angeles' />
                <alias key='&quot;NewOrleansMobile&quot;' value='New Orleans' />
                <alias key='&quot;PhoenixTucson&quot;' value='Arizona' />
                <alias key='&quot;SouthCarolina&quot;' value='South Carolina' />
              </aliases>
            </column>
            <column-instance column='[4046]' derivation='Sum' name='[sum:4046:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4225]' derivation='Sum' name='[sum:4225:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4770]' derivation='Sum' name='[sum:4770:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4046:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4225:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:4770:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</column>
            <column>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Multiple Values]</rows>
        <cols>([federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1] / [federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{274DD1F6-AF1F-485B-B53B-A3579FB7689A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Average price by state Dashboard'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='69125' id='3' name='Average price by state' w='75800' x='1400' y='4375' />
        <zone h='7250' id='8' name='Average price by state' pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' type='color' w='60000' x='1800' y='75750' />
        <zone h='84250' id='9' name='Average price by state (Table)' w='17800' x='79500' y='1875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='25' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='84250' id='9' is-fixed='true' name='Average price by state (Table)' w='17800' x='79500' y='1875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='69125' id='3' is-fixed='true' name='Average price by state' w='75800' x='1400' y='4375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7250' id='8' name='Average price by state' pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' type='color' w='60000' x='1800' y='75750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08A86FBD-875A-4E2C-9974-7B726DFA6026}' />
    </dashboard>
    <dashboard name='Hass Avocados' type='storyboard'>
      <style />
      <size maxheight='800' maxwidth='1600' minheight='800' minwidth='1600' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='vert' removable='false' type='layout-flow' w='99000' x='500' y='1000'>
            <zone h='5125' id='8' type='title' w='99000' x='500' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92875' id='1' param='vert' removable='false' type='layout-flow' w='99000' x='500' y='6125'>
              <zone h='12625' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='99000' x='500' y='6125' />
              <zone h='80250' id='5' paired-zone-id='4' removable='false' type='flipboard' w='99000' x='500' y='18750'>
                <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Total number sold' captured-sheet='Total number sold Dashboard' id='1'>
                      <capturedDeltas>
                        <worksheet name='Total number sold by state'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]' field-type='quantitative' max='7224698.8323485795' min='2034876.2310109283' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]' field-type='quantitative' max='-6705748.0859593321' min='-15211937.147793012' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Average price by state' captured-sheet='Average price by state Dashboard' id='6'>
                      <capturedDeltas>
                        <worksheet name='Average price by state'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Latitude (generated)]' field-type='quantitative' max='7740887.2682714127' min='1824940.7795940782' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Longitude (generated)]' field-type='quantitative' max='-6948356.0304461373' min='-15746728.313213807' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Cost of 1 avocado (state by month)' captured-sheet='Cost of 1 avocado (state by month)' id='3' />
                    <story-point caption='Type of avocado sold' captured-sheet='Type of avocado sold' id='4' />
                    <story-point caption='Bag size by state' captured-sheet='Bag size by state' id='5' />
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{A55C7913-B263-4D27-8DCD-E9228F67355C}' />
    </dashboard>
    <dashboard name='Total number sold Dashboard'>
      <style>
        <style-rule element='dash-subtitle'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='77875' id='3' name='Total number sold by state (Table)' w='22700' x='2200' y='4000' />
        <zone h='6875' id='8' name='Total number sold by state (Table)' pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' type='color' w='51200' x='2500' y='80250' />
        <zone h='61250' id='9' name='Total number sold by state' w='73200' x='25500' y='14375' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='41' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='77875' id='3' is-fixed='true' name='Total number sold by state (Table)' w='22700' x='2200' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6875' id='8' name='Total number sold by state (Table)' pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' type='color' w='51200' x='2500' y='80250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61250' id='9' is-fixed='true' name='Total number sold by state' w='73200' x='25500' y='14375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B6F15427-6697-488E-BC5A-88A8475FB19F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Hass Avocados'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{ACDA8C0F-C1EA-4DE4-AFEC-932D986CADD0}' />
    </window>
    <window class='dashboard' name='Total number sold Dashboard' tab-color='#17927d'>
      <viewpoints>
        <viewpoint name='Total number sold by state'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Total number sold by state (Table)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CE70C234-C95C-4696-B678-887923C4F688}' />
    </window>
    <window class='worksheet' name='Total number sold by state (Table)' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1D636AB6-F15F-40C8-B548-6BD99BC54DA8}' />
    </window>
    <window class='worksheet' name='Total number sold by state' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[sum:Total Volume:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</field>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[none:region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2FB03FFF-5931-4B4F-B44F-E6FFF3F28E66}' />
    </window>
    <window class='dashboard' name='Average price by state Dashboard' tab-color='#f66273'>
      <viewpoints>
        <viewpoint name='Average price by state'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Average price by state (Table)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BBA15D73-4FFA-426C-BF4A-D6E8893E3053}' />
    </window>
    <window class='worksheet' name='Average price by state (Table)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DD629A19-36C5-4586-AAF4-D5A3FFEF06CE}' />
    </window>
    <window class='worksheet' name='Average price by state' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{8E730788-E763-44D6-9BD2-36AEAE1B2285}' />
    </window>
    <window class='worksheet' name='Cost of 1 avocado (state by month)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1gudw3s1rqj1ae15uams61dw1tzs].[avg:AveragePrice:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</field>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[mn:Date:ok]</field>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DF7CDF39-B7D6-42BE-AFC2-7BC1A4E49FA0}' />
    </window>
    <window class='worksheet' name='Type of avocado sold' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]</field>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B31A846-F3AF-4244-87AF-1FD32AF44BD8}' />
    </window>
    <window class='worksheet' name='Bag size by state' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[:Measure Names]</field>
            <field>[federated.1gudw3s1rqj1ae15uams61dw1tzs].[Region (group) 1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{95A39565-5FD3-4E4B-9A65-EAA18DB5130B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Average price by state' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Average price by state (Table)' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Average price by state Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bag size by state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Cost of 1 avocado (state by month)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hass Avocados' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total number sold Dashboard' width='192'>
      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
      Yo9IRAMNo+sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total number sold by state' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total number sold by state (Table)' width='192'>
      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
      5p3cbIwPE7wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Type of avocado sold' width='192'>
      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
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
